# basic settings:
set-option -g status-keys vi
set-window-option -g mode-keys vi
set-option -g repeat-time 0
set -sg escape-time 0
setw -g aggressive-resize on

# act like iterm: active terminal is black, inactive are grey
set-window-option -g window-style 'bg=#181818'
set-window-option -g window-active-style 'bg=black'
# disable border decoration for active window (it is in the actual window)
set-window-option -g pane-active-border-style ''

# terminal:
set -g default-terminal "xterm-256color"
set-option -g history-limit 99999

# bells & monitoring
set -g visual-silence on
set -g visual-bell off
set -g bell-action any

# window title:
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I.#P] #W'
set-window-option -g automatic-rename on
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg red

# messages:
set-window-option -g mode-bg magenta
set-window-option -g mode-fg black
set-option -g message-bg magenta
set-option -g message-fg black

# status bar:
set-option -g status-justify right
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 55
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%d-%m-%Y %R#[default]'
set-option -g visual-activity on
set-window-option -g monitor-activity on

# clock:
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# mouse:
set-option -g -q mouse on

# enter command mode with C-Space (not C-a like screen, or the default C-b)
unbind C-b
set -g prefix C-Space

# send commands to nested session with C-Space Space (just in case)
bind-key Space send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# If we want Vim to be told about focus: http://git.io/2UqSgQ
set -g focus-events on

# reload conf with R
bind R source-file ~/.tmux.conf

# enter copy mode with Ctrl-Space
unbind [
bind Escape copy-mode

# vim bindings from https://github.com/jbnicolai/tmux/blob/master/.tmux.conf
# vim resizes
bind - resize-pane -D 1
bind + resize-pane -U 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# vim style split + perserve pwd
bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# split or new window path perserve
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# and faster resizes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# vim copying
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection

# page up/down history
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# mouse wheel scroll history
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

# osx clipboard integration with buffer copy using reattach-to-user-namespace:
if-shell "which reattach-to-user-namespace > /dev/null" \
    'set -gq @osx-pasteboard true'
if 'tmux show -gv @osx-clipboard' \
    'set -g default-command "reattach-to-user-namespace -l $SHELL"'
if 'tmux show -gv @osx-clipboard' \
    'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

# Similar to 'C-w j' to navigate windows in Vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Smart pane switching with awareness of vim splits
# see https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# refresh screen
bind C-l send-keys 'C-l'

# clear screen
bind -n C-k send-keys -R \; send-keys 'C-l' \; clear-history

# List of plugins
# Supports `github_username/repo` or full git URLs
# github_username/plugin_name      \
# git@github.com/user/plugin       \
# git@bitbucket.com/user/plugin    \
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

# initializes TMUX plugin manager - must be at the bottom
run '~/.tmux/plugins/tpm/tpm'

